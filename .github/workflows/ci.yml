name: Build Sora Studio

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
            artifact: SoraStudio.exe
            build_cmd: |
              pyinstaller main.py --name SoraStudio --onefile --windowed --clean --collect-all PySide6 --collect-all keyring --collect-all platformdirs --collect-all sora_gui --icon icon.ico
          - os: macos-latest
            name: macOS
            artifact: SoraStudio
            build_cmd: |
              pyinstaller main.py --name SoraStudio --onefile --windowed --clean --collect-all PySide6 --collect-all keyring --collect-all platformdirs --collect-all sora_gui
          - os: ubuntu-latest
            name: Linux
            artifact: SoraStudio
            build_cmd: |
              pyinstaller main.py --name SoraStudio --onefile --windowed --clean --collect-all PySide6 --collect-all keyring --collect-all platformdirs --collect-all sora_gui

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build ${{ matrix.name }}
        run: ${{ matrix.build_cmd }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SoraStudio-${{ matrix.name }}
          path: dist/${{ matrix.artifact }}